//ROS typedefs
#include "ros/ros.h"
#include <sensor_msgs/JointState.h>
#include <geometry_msgs/PoseStamped.h>
#include <cob_srvs/Trigger.h>
#include <cob_srvs/Trigger.h>
#include <cob_kuka_xmlkrc/KukaEthernetClient.h>

/* protected region user include files on begin */
/* protected region user include files end */

class cob_kuka_xmlkrc_config
{
public:
		std::string KRC_ip_address;
		int KRC_ip_port;

};

class cob_kuka_xmlkrc_data
{
// autogenerated: don't touch this class
public:
//input data
  
	
//output data
    	sensor_msgs::JointState out_joint_states;
    	geometry_msgs::PoseStamped out_cart_pose;
 

};

class cob_kuka_xmlkrc_impl
{
	/* protected region user member variables on begin */
	KukaEthernetClient kuka_client_;
	/* protected region user member variables end */

public:
    cob_kuka_xmlkrc_impl() 
    {
        /* protected region user constructor on begin */
		/* protected region user constructor end */
    }
    void configure(cob_kuka_xmlkrc_config config) 
    {
        /* protected region user configure on begin */
    	std::cout << config.KRC_ip_port << "\n";
		/* protected region user configure end */
    }
    void update(cob_kuka_xmlkrc_data &data, cob_kuka_xmlkrc_config config)
    {
        /* protected region user update on begin */
		/* protected region user update end */
    }

	bool callback_Init(cob_srvs::Trigger::Request  &req, cob_srvs::Trigger::Response &res , cob_kuka_xmlkrc_config config)
	{
		/* protected region user implementation of service callback for Init on begin */
		std::cout << config.KRC_ip_port << "\n";
		/* protected region user implementation of service callback for Init end */
		return true;
	}
	bool callback_MoveLin_BL(cob_srvs::Trigger::Request  &req, cob_srvs::Trigger::Response &res , cob_kuka_xmlkrc_config config)
	{
		/* protected region user implementation of service callback for MoveLin_BL on begin */
		/* protected region user implementation of service callback for MoveLin_BL end */
		return true;
	}
    
    /* protected region user additional functions on begin */
	/* protected region user additional functions end */
    
};
